{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/search/Search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","name","email","CardList","monsters","map","Search","placeholder","handleChange","type","onChange","App","state","searchField","getInput","getInputValue","bind","fetch","then","response","json","user","setState","e","this","target","value","filtredMonstred","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAEaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,4BACR,6BAAKJ,EAAMG,QAAQE,OACnB,4BAAIL,EAAMG,QAAQG,YCQfC,EAVE,SAAAP,GACb,OACI,qBAAKC,UAAU,YAAf,SACID,EAAMQ,SAASC,KAAI,SAACN,GAAD,OAChB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNrBM,G,MAAS,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACjC,OACI,8BAER,uBAAOX,UAAU,SACPY,KAAK,SACLF,YAAaA,EACbG,SAAUF,QCgCLG,E,kDApCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAEf,EAAKC,SAAW,EAAKC,cAAcC,KAAnB,gBAPJ,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKC,SAAS,CAAElB,SAAUiB,S,2BAK9C,SAAcE,GACZC,KAAKF,SAAS,CAAET,YAAaU,EAAEE,OAAOC,U,oBAExC,WACE,MAAkCF,KAAKZ,MAA/BR,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,YACZc,EAAkBvB,EAASwB,QAAO,SAAC7B,GAAD,OACtCA,EAAQE,KAAK4B,cAAcC,SAASjB,EAAYgB,kBAElD,OACE,sBAAKhC,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CAAQU,YAAY,aAAaC,aAAcgB,KAAKV,WAEpD,cAAC,EAAD,CAAUV,SAAUuB,W,GA/BVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9d79fd01.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className='card-container' >\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=140x140`}/>\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nconst CardList = props => {\r\n    return (\r\n        <div className=\"card-list\">\r\n           {props.monsters.map((monster) => (\r\n               <Card key={monster.id} monster={monster} />\r\n          ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const Search = ({placeholder, handleChange}) => {\r\n    return (\r\n        <div>\r\n            \r\n<input className=\"search\"\r\n          type='search'\r\n          placeholder={placeholder}\r\n          onChange={handleChange} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./component/card-list/card-list.component\";\nimport { Search } from \"./component/search/Search.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n    this.getInput = this.getInputValue.bind(this);\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((user) => this.setState({ monsters: user }));\n  }\n  // getInputValue = (e) => {\n  //   this.setState({ searchField: e.target.value });\n  // };\n  getInputValue(e) {\n    this.setState({ searchField: e.target.value });\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    const filtredMonstred = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className='App'>\n        <h1>The Monsters</h1>\n        <Search placeholder='enter name' handleChange={this.getInput} />\n\n        <CardList monsters={filtredMonstred} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}